{"ast":null,"code":"import _classCallCheck from \"/home/chaos/Work/Exchange/exchange_client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/chaos/Work/Exchange/exchange_client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/chaos/Work/Exchange/exchange_client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/chaos/Work/Exchange/exchange_client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/chaos/Work/Exchange/exchange_client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/chaos/Work/Exchange/exchange_client/src/components/tokens/TokenShow.js\";\nimport React from 'react';\nimport flv from 'flv.js';\nimport { connect } from 'react-redux';\nimport { fetchToken } from '../../actions';\n\nvar TokenShow =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TokenShow, _React$Component);\n\n  function TokenShow(props) {\n    var _this;\n\n    _classCallCheck(this, TokenShow);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TokenShow).call(this, props));\n    _this.videoRef = React.createRef();\n    return _this;\n  }\n\n  _createClass(TokenShow, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var id = this.props.match.params.id;\n      this.props.fetchToken(id);\n      this.buildPlayer();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.buildPlayer();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.player.destroy();\n    }\n  }, {\n    key: \"buildPlayer\",\n    value: function buildPlayer() {\n      if (this.player || !this.props.token) {\n        return;\n      }\n\n      var id = this.props.match.params.id;\n      this.player = flv.createPlayer({\n        type: 'flv',\n        url: \"http://localhost:8000/live/\".concat(id, \".flv\")\n      });\n      this.player.attachMediaElement(this.videoRef.current);\n      this.player.load();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.props.token) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, \"Loading...\");\n      }\n\n      var _this$props$token = this.props.token,\n          title = _this$props$token.title,\n          description = _this$props$token.description;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"video\", {\n        ref: this.videoRef,\n        style: {\n          width: '100%'\n        },\n        controls: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, title), React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, description));\n    }\n  }]);\n\n  return TokenShow;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state, ownProps) {\n  return {\n    token: state.tokens[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchToken: fetchToken\n})(TokenShow);","map":{"version":3,"sources":["/home/chaos/Work/Exchange/exchange_client/src/components/tokens/TokenShow.js"],"names":["React","flv","connect","fetchToken","TokenShow","props","videoRef","createRef","id","match","params","buildPlayer","player","destroy","token","createPlayer","type","url","attachMediaElement","current","load","title","description","width","Component","mapStateToProps","state","ownProps","tokens"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,QAAhB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,eAA3B;;IAEMC,S;;;;;AAEJ,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,mFAAMA,KAAN;AACA,UAAKC,QAAL,GAAgBN,KAAK,CAACO,SAAN,EAAhB;AAFiB;AAGlB;;;;wCAEmB;AAAA,UACXC,EADW,GACL,KAAKH,KAAL,CAAWI,KAAX,CAAiBC,MADZ,CACXF,EADW;AAElB,WAAKH,KAAL,CAAWF,UAAX,CAAsBK,EAAtB;AACA,WAAKG,WAAL;AACD;;;yCAEoB;AACnB,WAAKA,WAAL;AACD;;;2CAEsB;AACrB,WAAKC,MAAL,CAAYC,OAAZ;AACD;;;kCAEa;AACZ,UAAI,KAAKD,MAAL,IAAe,CAAC,KAAKP,KAAL,CAAWS,KAA/B,EAAsC;AACpC;AACD;;AAHW,UAILN,EAJK,GAIC,KAAKH,KAAL,CAAWI,KAAX,CAAiBC,MAJlB,CAILF,EAJK;AAKZ,WAAKI,MAAL,GAAcX,GAAG,CAACc,YAAJ,CAAiB;AAC7BC,QAAAA,IAAI,EAAE,KADuB;AAE7BC,QAAAA,GAAG,uCAAgCT,EAAhC;AAF0B,OAAjB,CAAd;AAIA,WAAKI,MAAL,CAAYM,kBAAZ,CAA+B,KAAKZ,QAAL,CAAca,OAA7C;AACA,WAAKP,MAAL,CAAYQ,IAAZ;AACD;;;6BAEQ;AACP,UAAG,CAAC,KAAKf,KAAL,CAAWS,KAAf,EAAqB;AACnB,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF;AAGD;;AALM,8BAMsB,KAAKT,KAAL,CAAWS,KANjC;AAAA,UAMAO,KANA,qBAMAA,KANA;AAAA,UAMOC,WANP,qBAMOA,WANP;AAOP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,GAAG,EAAE,KAAKhB,QAAjB;AAA2B,QAAA,KAAK,EAAE;AAAEiB,UAAAA,KAAK,EAAE;AAAT,SAAlC;AAAoD,QAAA,QAAQ,MAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKF,KAAL,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKC,WAAL,CAHF,CADF;AAOD;;;;EAhDqBtB,KAAK,CAACwB,S;;AAoD9B,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,QAAR,EAAqB;AAC3C,SAAO;AAAEb,IAAAA,KAAK,EAAEY,KAAK,CAACE,MAAN,CAAaD,QAAQ,CAAClB,KAAT,CAAeC,MAAf,CAAsBF,EAAnC;AAAT,GAAP;AACD,CAFD;;AAIA,eAAeN,OAAO,CAACuB,eAAD,EAAkB;AAACtB,EAAAA,UAAU,EAAVA;AAAD,CAAlB,CAAP,CAAuCC,SAAvC,CAAf","sourcesContent":["import React from 'react';\nimport flv from 'flv.js';\nimport { connect } from 'react-redux';\nimport { fetchToken } from '../../actions';\n\nclass TokenShow extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.videoRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const {id} = this.props.match.params;\n    this.props.fetchToken(id);\n    this.buildPlayer();\n  }\n\n  componentDidUpdate() {\n    this.buildPlayer();\n  }\n\n  componentWillUnmount() {\n    this.player.destroy();\n  }\n\n  buildPlayer() {\n    if (this.player || !this.props.token) {\n      return;\n    }\n    const {id} = this.props.match.params;\n    this.player = flv.createPlayer({\n      type: 'flv',\n      url: `http://localhost:8000/live/${id}.flv`\n    });\n    this.player.attachMediaElement(this.videoRef.current);\n    this.player.load();\n  }\n\n  render() {\n    if(!this.props.token){\n      return (\n        <div>Loading...</div>\n      );\n    }\n    const {title, description} = this.props.token;\n    return (\n      <div>\n        <video ref={this.videoRef} style={{ width: '100%'}} controls />\n        <h1>{title}</h1>\n        <h5>{description}</h5>\n      </div>\n    );\n  }\n  \n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return { token: state.tokens[ownProps.match.params.id] };\n};\n\nexport default connect(mapStateToProps, {fetchToken})(TokenShow);\n"]},"metadata":{},"sourceType":"module"}